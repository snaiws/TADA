import pandas as pd



def query_creat_table_oil():
    query = """  
        CREATE TABLE IF NOT EXISTS oil_prices (  
            id INT AUTO_INCREMENT PRIMARY KEY,  
            date DATE NOT NULL,  
            product VARCHAR(20) NOT NULL,  
            price DECIMAL(10, 2),  
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,  
            UNIQUE KEY date_product_idx (date, product)  
        )  
        """
    return query


def query_update_oilprice(data):
    columns = ["date","고급휘발유", "보통휘발유", "실내등유", "선박용경유", "자동차용경유",   
                "벙커C유", "용제", "아스팔트"]  
    df = pd.DataFrame(data, columns = columns)
    df = pd.melt(df, id_vars=["date"], var_name="product", value_name="price")
    df["date"] = pd.to_datetime(df["date"])
    df['price'] = df['price'].map(lambda x: float(x.replace(',','')))
    query = ', '.join(list(map(lambda x: f"('{x[0]}', '{x[1]}', {x[2]})", df.to_numpy())))
    query = f"""
    INSERT INTO
        oil_prices (date, product, price)
    VALUES
        {query}
    """
    return query



# 일간 유가정보 저장할 테이블 생성
def query_creat_table_daily_oil():  
    query = """  
        CREATE TABLE IF NOT EXISTS daily_oil_price (  
            date DATE PRIMARY KEY,  
            price DECIMAL(10, 2) NOT NULL,  
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP  
        )  
    """  
    return query  



# 일간 유가정보 저장
def query_update_daily_oilprice(data):  
    # data는 [date, price] 형식으로 전달됨  
    query = f"""  
    INSERT INTO daily_oil_price (date, price)  
    VALUES ('{data[0]}', {data[1]})  
    ON DUPLICATE KEY UPDATE  
        price = VALUES(price),  
        updated_at = CURRENT_TIMESTAMP  
    """  
    return query  



if __name__ == "__main__":
    data = [['2019-01-01', '1,385.29', '1,213.58', '701.93', '1,093.52', '1,113.21', '638.30', '482.34', '533.32'], ['2019-02-01', '1,399.24', '1,235.53', '730.33', '1,093.83', '1,148.18', '638.25', '477.86', '533.35'], ['2019-03-01', '1,462.13', '1,301.66', '755.44', '1,141.82', '1,187.00', '671.46', '513.66', '572.01'], ['2019-04-01', '1,528.19', '1,376.91', '786.86', '1,173.11', '1,217.07', '708.61', '545.00', '582.00'], ['2019-05-01', '1,632.13', '1,433.87', '794.02', '1,233.50', '1,265.43', '713.83', '580.48', '585.09'], ['2019-06-01', '1,584.15', '1,375.81', '742.16', '1,259.61', '1,219.08', '727.58', '566.02', '577.43'], ['2019-07-01', '1,602.65', '1,406.86', '763.66', '1,203.65', '1,241.81', '732.36', '505.93', '547.00'], ['2019-08-01', '1,574.68', '1,390.25', '758.49', '1,222.52', '1,234.42', '738.67', '525.79', '605.72'], ['2019-09-01', '1,659.82', '1,456.41', '783.88', '1,256.67', '1,289.42', '642.72', '506.57', '532.28'], ['2019-10-01', '1,632.48', '1,441.17', '764.70', '1,267.49', '1,271.06', '710.17', '512.27', '582.26'], ['2019-11-01', '1,641.20', '1,459.36', '755.41', '1,257.34', '1,268.64', '650.47', '527.64', '500.27'], ['2019-12-01', '1,646.10', '1,470.00', '767.53', '1,238.19', '1,284.91', '641.91', '532.49', '458.07'], ['2020-01-01', '1,643.17', '1,452.01', '754.45', '1,273.92', '1,274.24', '710.94', '579.18', '480.65'], ['2020-02-01', '1,590.49', '1,401.02', '672.28', '1,257.64', '1,201.43', '739.30', '550.63', '519.61'], ['2020-03-01', '1,470.03', '1,231.05', '482.21', '1,176.92', '1,046.00', '603.11', '501.31', '485.91'], ['2020-04-01', '1,342.78', '1,108.13', '350.70', '1,025.89', '944.08', '475.86', '335.57', '396.45'], ['2020-05-01', '1,355.99', '1,151.35', '402.64', '906.40', '964.99', '387.57', '249.27', '338.14'], ['2020-06-01', '1,454.40', '1,252.28', '482.33', '918.05', '1,049.66', '413.81', '314.22', '370.12'], ['2020-07-01', '1,468.07', '1,258.37', '495.32', '1,013.14', '1,060.46', '475.31', '393.65', '434.47'], ['2020-08-01', '1,470.94', '1,262.15', '492.69', '1,053.35', '1,055.04', '504.69', '427.92', '465.91'], ['2020-09-01', '1,456.21', '1,241.70', '470.61', '1,037.05', '1,022.53', '503.54', '512.59', '486.18'], ['2020-10-01', '1,447.70', '1,229.51', '478.39', '1,000.15', '1,007.70', '478.41', '497.34', '453.26'], ['2020-11-01', '1,445.95', '1,237.28', '507.46', '985.49', '1,025.94', '465.95', '465.04', '436.83'], ['2020-12-01', '1,501.63', '1,299.75', '585.48', '990.98', '1,092.69', '478.97', '454.78', '452.96'], ['2021-01-01', '1,540.72', '1,338.69', '623.76', '1,050.63', '1,130.46', '515.50', '498.37', '477.69'], ['2021-02-01', '1,574.62', '1,379.49', '654.04', '1,091.98', '1,177.25', '579.39', '551.19', '514.37'], ['2021-08-01', '1,742.76', '1,537.45', '720.65', '1,260.77', '1,310.16', '706.09', '770.21', '632.30'], ['2021-09-01', '1,756.40', '1,561.58', '773.42', '1,246.32', '1,346.74', '733.19', '691.28', '617.06'], ['2021-10-01', '1,850.78', '1,670.43', '900.22', '1,285.93', '1,460.36', '769.32', '742.08', '669.16'], ['2021-11-01', '1,807.96', '1,588.77', '887.46', '1,333.06', '1,390.25', '823.32', '830.59', '706.15'], ['2021-12-01', '1,686.59', '1,462.55', '848.47', '1,274.16', '1,286.77', '809.69', '808.02', '657.40']]
    
    res = query_update_oilprice(data)
    print(res)